options:
  logging: CLOUD_LOGGING_ONLY
steps:
- name: gcr.io/cloud-builders/git
  id: variables
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # store multiple values as environment variables
      # name all values with a common prefix (we'll use "build_")
      if [ "$BRANCH_NAME" = "prod" ]
      then
        export build_profile="prod"
      elif [ "$BRANCH_NAME" = "pre-prod" ]
      then
        export build_profile="pre-prod"
      elif [ "$BRANCH_NAME" = "stage" ]
      then
        export build_profile="stage"
      elif [ "$BRANCH_NAME" = "dev" ]
      then
        export build_profile="dev"
      fi
      
      if [ -z "$_PR_NUMBER" ]
      then
        export build_prefix=""
        echo "**** Build triggered by commit ****"
        echo "COMMIT_SHA: ${COMMIT_SHA}"
        echo "REVISION_ID: ${REVISION_ID}"
        echo "SHORT_SHA: ${SHORT_SHA}"
        echo "BRANCH_NAME: ${BRANCH_NAME}"
        echo "TRIGGER_NAME: ${TRIGGER_NAME}"
        echo "_PR_NUMBER: ${_PR_NUMBER}"
        echo "_BASE_BRANCH: ${_BASE_BRANCH}"
        echo "_HEAD_BRANCH: ${_HEAD_BRANCH}"
        echo "build_profile=${build_profile}"
        echo "build_prefix=${build_prefix}"
        echo "*********************************"
      else
        export build_prefix="PR${_PR_NUMBER}-"
        export build_profile="${_BASE_BRANCH}"

        if ["${_BASE_BRANCH}" = "prod"] ; then
          if ["${_HEAD_BRANCH}" != "pre-prod"] ; then
            echo "Pull Requests into prod are only allowed from pre-prod"
            exit 1
          fi
          # for PRs into prod, avoid deploying to prod env, instead deploy in pre-prod
          # a lot of the time it's not good practice to test against production 
          # for example, there could be PII data that ends up accidentally being collected
          export build_profile="${_HEAD_BRANCH}"
        fi


        echo "**** Build triggered by pull request ****"
        echo "COMMIT_SHA: ${COMMIT_SHA}"
        echo "REVISION_ID: ${REVISION_ID}"
        echo "SHORT_SHA: ${SHORT_SHA}"
        echo "BRANCH_NAME: ${BRANCH_NAME}"
        echo "TRIGGER_NAME: ${TRIGGER_NAME}"
        echo "_PR_NUMBER: ${_PR_NUMBER}"
        echo "_BASE_BRANCH: ${_BASE_BRANCH}"
        echo "_HEAD_BRANCH: ${_HEAD_BRANCH}"
        echo "build_profile=${build_profile}"
        echo "build_prefix=${build_prefix}"
        echo "*********************************"


      fi
      



      export build_token=\"$(gcloud auth application-default print-access-token)\"

      # write all "build_" variables to the persistent volume "/workspace"
      env | grep "^build_" > /workspace/build_vars
#- name: gcr.io/cloud-builders/gcloud
#  id: fetch-credentials
#  entrypoint: 'bash'
#  args: [ '-c', "gcloud secrets versions access latest --secret=apigee-org-admin --format='get(payload.data)' | tr '_-' '/+' | base64 -d > admin.json" ]
- name: node:12
  id: "Install Dependencies"
  entrypoint: npm
  args: ['install', '--silent', '--no-fund']
- name: node:12
  id: "Static Code Analysis"
  entrypoint: npm
  args: ['run', 'lint']
- name: node:12
  id: "Unit Test"
  entrypoint: npm
  args: ['run', 'unit-test']
- name: 'gcr.io/cloud-builders/mvn'
  id: "Process Resources"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp process-resources -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dcommit=$COMMIT_SHA -Dbranch=$BRANCH_NAME -Duser.name=cloudbuild
- name: 'gcr.io/cloud-builders/mvn'
  id: "Pre-deployment Configurations"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-config:targetservers -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dbearer=${build_token}
- name: 'gcr.io/cloud-builders/mvn'
  id: "Package"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-enterprise:configure -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix}
- name: 'gcr.io/cloud-builders/mvn'
  id: "Deploy"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-enterprise:deploy -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dbearer=${build_token}
- name: node:12
  id: "Functional Test"
  entrypoint: npm
  args: ['run', 'integration-test']
