steps:
- name: gcr.io/cloud-builders/git
  id: variables
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # store multiple values as environment variables
      # name all values with a common prefix (we'll use "build_")
      if [ "$BRANCH_NAME" = "master" ]
      then
        export build_profile="ngsaas-test"
      elif [ "$BRANCH_NAME" = "prod" ]
      then
        export build_profile="ngsaas-prod"
      else
        export build_profile="ngsaas-dev"
      fi

      export build_prefix="" 
      export build_token=\"$(gcloud auth application-default print-access-token)\"

      # write all "build_" variables to the persistent volume "/workspace"
      env | grep "^build_" > /workspace/build_vars
#- name: gcr.io/cloud-builders/gcloud
#  id: fetch-credentials
#  entrypoint: 'bash'
#  args: [ '-c', "gcloud secrets versions access latest --secret=apigee-org-admin --format='get(payload.data)' | tr '_-' '/+' | base64 -d > admin.json" ]
- name: node:12
  id: install-npm-modules
  entrypoint: npm
  args: ['install', '--silent', '--no-fund']
- name: node:12
  id: "Static Code Analysis"
  entrypoint: bash
  args:
      - "-c"
      - |-
        npm run apigeelint | tee report.apigeelint.html && \
        if [ ${PIPESTATUS[0]} -ne "0" ]; then exit -1; fi && \
        npm run eslint | tee report.eslint.html && \
        if [ ${PIPESTATUS[0]} -ne "0" ]; then exit -1; fi
- name: node:12
  id: "Unit Test"
  entrypoint: npm
  args: ['run', 'unit-test']
- name: 'gcr.io/cloud-builders/mvn'
  id: "Process Resources"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp process-resources -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dcommit=$COMMIT_SHA -Dbranch=$BRANCH_NAME -Duser.name=cloudbuild
- name: 'gcr.io/cloud-builders/mvn'
  id: "Pre-deployment Configurations"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-config:targetservers -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dbearer=${build_token}
- name: 'gcr.io/cloud-builders/mvn'
  id: "Package"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-enterprise:configure -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix}
- name: 'gcr.io/cloud-builders/mvn'
  id: "Deploy"
  entrypoint: 'bash'
  args:
    - -c 
    - |
      # Read environment variables from disk
      source /workspace/build_vars &&
      mvn -f cloudbuild-pom.xml -ntp apigee-enterprise:deploy -P${build_profile} -Dorg=$PROJECT_ID -Ddeployment.suffix=${build_prefix} -Dbearer=${build_token}
- name: node:12
  id: "Functional Test"
  entrypoint: bash
  args:
      - "-c"
      - |-
        npm run integration-test | tee report.e2e.html && \
        if [ ${PIPESTATUS[0]} -ne "0" ]; then exit -1; fi
- name: "gcr.io/cloud-builders/gsutil"
  id: "Archive Report"
  entrypoint: "bash"
  args:
      - "-c"
      - |-
        gsutil cp -r coverage* \
        gs://${PROJECT_ID}_cloudbuild/reports/$BUILD_ID/coverage && \
        gsutil cp ./report.*.html \
        gs://${PROJECT_ID}_cloudbuild/reports/$BUILD_ID
